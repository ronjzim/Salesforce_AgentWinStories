<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Agent_Get_win_stories</name>
        <label>Agent Get win stories</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>Agentforce_Highspot_Agent</actionName>
        <actionType>generateAiAgentResponse</actionType>
        <connector>
            <targetReference>Update_JSON_Response</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>userMessage</name>
            <value>
                <stringValue>Using the industry {!inferredIndustry}, perform a semantic search through all slides in the &apos;Agentforce Highspot Agent Library&apos; to find the 2 most similar customer win stories.

Your entire response must be ONLY a raw JSON array of objects. Each object must have these four keys:

&quot;id&quot;

&quot;customerName&quot;

&quot;relevanceScore&quot;

&quot;summary&quot; (must be in the past tense and include quantitative/qualitative metrics)

Do not add any text before or after the JSON array.</stringValue>
            </value>
        </inputParameters>
        <nameSegment>Agentforce_Highspot_Agent</nameSegment>
        <outputParameters>
            <assignToReference>promptResponse</assignToReference>
            <name>agentResponse</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Infer_True_Industry</name>
        <label>Infer True Industry</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>Agentforce_Highspot_Agent</actionName>
        <actionType>generateAiAgentResponse</actionType>
        <connector>
            <targetReference>Agent_Get_win_stories</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>userMessage</name>
            <value>
                <stringValue>The account is named {!opportunityAccountName} and is in the {!opportunityIndustry} industry. 

Based on the provided text, what is a more accurate, single business category? For example, if the text is &quot;The account is named Adaptive Sports Center and is in the Communications industry&quot;, a good answer would be &quot;Sports and Recreation&quot;. Respond with ONLY the new category name and nothing else.</stringValue>
            </value>
        </inputParameters>
        <nameSegment>Agentforce_Highspot_Agent</nameSegment>
        <outputParameters>
            <assignToReference>inferredIndustry</assignToReference>
            <name>agentResponse</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>64.0</apiVersion>
    <description>Win stories from prompt template flow.</description>
    <environments>Default</environments>
    <interviewLabel>Get Win Stories From Prompt {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Get Win Stories From Prompt</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Opportunity_Record</name>
        <label>Get Opportunity Record</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Infer_True_Industry</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordID</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_JSON_Response</name>
        <label>Update JSON Response</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Opportunity_Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Win_Story_JSON_Response__c</field>
            <value>
                <elementReference>promptResponse</elementReference>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Opportunity_Record</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>inferredIndustry</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>opportunityAccountName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>opportunityIndustry</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>promptResponse</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>recordID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
